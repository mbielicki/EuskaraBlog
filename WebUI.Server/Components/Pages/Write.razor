@page "/write"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IMediator Mediator
@attribute [StreamRendering]

<PageTitle>Write New Article</PageTitle>

<h3>Write New Article</h3>

@if (isLoading)
{
    <p><em>Loading user information...</em></p>
}
else if (!isAuthenticated)
{
    <p>You must be signed in to write a new article.</p>
}
else if (userId == "00000000-0000-0000-d38e-5885d8cf76fa") // Assuming "1" is the ID of the admin user. TODO: Replace with actual admin check logic
{
    <ArticleEditor />
}
else
{
    <p>You are not authorized to write a new article.</p>
    @userId
}


@code {
    private string? userId;
    private bool isAuthenticated;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
		isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        userId = user.FindFirst("http://schemas.microsoft.com/identity/claims/objectidentifier")?.Value;
		isLoading = false;
    }
}
